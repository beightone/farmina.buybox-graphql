type SelectedProperty {
  key: String
  value: String
}

enum ItemsFilter {
  """
  Returns all items, same as no filter.
  """
  ALL
  """
  Returns only the first available item. Returns first if no item is available.
  """
  FIRST_AVAILABLE
  """
  Returns all available items. Returns first if no item is available.
  """
  ALL_AVAILABLE
}

type ProductPriceRange {
  sellingPrice: PriceRange
  listPrice: PriceRange
}

type PriceRange {
  highPrice: Float
  lowPrice: Float
}

type ProductClusters {
  id: ID
  name: String
}

type ClusterHighlight {
  id: ID
  name: String
}

type Seller {
  sellerId: ID
  sellerName: String
  addToCartLink: String
  sellerDefault: Boolean
  commertialOffer: Offer
}

type SkuSpecification {
  field: SKUSpecificationField
  values: [SKUSpecificationValue]
}

type SKUSpecificationField {
  originalName: String
  name: String @translatableV2
}

type SKUSpecificationValue {
  originalName: String
  name: String @translatableV2
}

type productSpecification {
  fieldName: String @translatableV2
  fieldValues: [String] @translatableV2
}

input ProductUniqueIdentifier {
  field: ProductUniqueIdentifierField!
  value: ID!
}

enum ProductUniqueIdentifierField {
  id
  slug
  ean
  reference
  sku
}

type Attachment {
  id: ID
  name: String
  required: Boolean
  domainValues: [DomainValues]
}

type DomainValues {
  FieldName: String
  MaxCaracters: String
  DomainValues: String
}

enum InstallmentsCriteria {
  MAX_WITHOUT_INTEREST
  MAX_WITH_INTEREST
  MAX # Equivalent to MAX_WITHOUT_INTEREST. Kept for backwards-compatibility
  MIN
  ALL
}

type Offer {
  Installments(
    criteria: InstallmentsCriteria = ALL
    rates: Boolean = true
    excludedPaymentSystems: [String]
    includedPaymentSystems: [String]
  ): [Installment]
  Price: Float
  ListPrice: Float
  spotPrice: Float
  PriceWithoutDiscount: Float
  RewardValue: Float
  PriceValidUntil: String
  AvailableQuantity: Float
  Tax: Float
  taxPercentage: Float
  CacheVersionUsedToCallCheckout: String
  DeliverySlaSamples: [DeliverySlaSamples]
  """
  List of discount highlights
  """
  discountHighlights: [Discount!]
  teasers: [Teaser!]
  """
  List of SKUs for gifts associated with the product
  """
  giftSkuIds: [String]
  """
  List of gifts associated with the product
  """
  gifts: [Gift]
}

type Gift {
  productName: String
  skuName: String
  brand: String
  linkText: String
  description: String
  images: [GiftImage]
}

type GiftImage {
  imageUrl: String
  imageLabel: String
  imageText: String
}

type Teaser {
  name: String
  conditions: TeaserCondition
  effects: TeaserEffects
}

type TeaserCondition {
  minimumQuantity: Int
  parameters: [TeaserValue]
}

type TeaserEffects {
  parameters: [TeaserValue]
}

type TeaserValue {
  name: String
  value: String
}

"""
Discount object
"""
type Discount {
  """
  Discount name
  """
  name: String
}

type DeliverySlaSamples {
  DeliverySlaPerTypes: [DeliverySlaPerTypes]
  Region: Region
}

type DeliverySlaPerTypes {
  TypeName: String
  Price: Float
  EstimatedTimeSpanToDelivery: String
}

type Region {
  IsPersisted: Boolean
  IsRemoved: Boolean
  Id: ID
  Name: String
  CountryCode: String
  ZipCode: String
  CultureInfoName: String
}

type Image {
  cacheId: ID
  imageId: ID
  imageLabel: String
  imageTag: String
  imageUrl: String @toVtexAssets
  imageText: String
}

type Video {
  videoUrl: String
}

type SpecificationGroup {
  originalName: String
  name: String @translatableV2
  specifications: [SpecificationGroupProperty]
}

type SpecificationGroupProperty {
  originalName: String
  name: String @translatableV2
  values: [String] @translatableV2
}

type Property {
  originalName: String
  name: String @translatableV2
  values: [String] @translatableV2
}

type PropertyGroup {
  name: String
  properties: [String]
}

type Installment {
  Value: Float
  InterestRate: Float
  TotalValuePlusInterestRate: Float
  NumberOfInstallments: Int
  PaymentSystemName: String
  PaymentSystemGroupName: String
  Name: String
}

type Reference {
  Key: String
  Value: String
}

enum CrossSelingInputEnum {
  buy
  similars
  view
  viewAndBought
  accessories
  suggestions
}
